% preamble
clearvars;clc;close all;format longg;

% initial conditions and parameters
Pd = [100,120,-135];
P0 = [0,50,0,0]';
Dt=0.1;



%% simulation
% initializations
t = 0:Dt:100;

% state for dynamics/kinematics modeling
x = zeros(4,length(t));
x(:,1) = P0;
u = zeros(2, length(t));
y = zeros(9,length(t));

y0 = measure(x(:,1),Pd);
X0 = [y0(1),y0(2),y0(3),0,0, 100, 120, 0]';
ekf = EKF(X0,Dt);
x_hat = zeros(8,length(t));
debug = zeros(4,length(t));

stage = ones(size(t));
for k=2:length(t)
    % =============== Read sensors ========================================
    y(:,k) = measure(x(:,k-1),Pd);

    % =============== Filter ==============================================
    ekf = ekf.predict(y(8:9,k));
    ekf = ekf.update(y(1:7,k));
    x_hat(:,k) = ekf.X;
    debug(:,k) = ekf.debug;

    % ============ Compute control ========================================
    %[u(:,k), stage(k)] = los_controller(x_hat(:,k), stage(k-1));
    u(:,k) = controller(x,Pd);

    % ============ Aply control to the plant ==============================
    x(:,k) = model(x(:,k-1), u(:,k), Dt);

    if sqrt((x(1,k)-Pd(1))^2 +(x(2,k)-Pd(2))^2) < 5
        break    
    end
end
x = x(:,2:k);
x_hat = x_hat(:,2:k);
y = y(:,2:k);

%% plots
figure; hold on; grid on;
plot(x(2,:), x(1,:), 'LineWidth', 2); 
plot(x_hat(2,:), x_hat(1,:), 'LineWidth', 1); 
plot(Pd(2), Pd(1), '^', 'MarkerEdgeColor', 'black', 'MarkerFaceColor', 'green', 'MarkerSize', 10);
plot([Pd(2),Pd(2)+50*sind(Pd(3))], [Pd(1),Pd(1)+50*cosd(Pd(3))], 'b--', 'LineWidth', 2);
legend('Ground truth', 'Filter Prediction', 'Dock location', 'Location', 'best'); 
xlabel('East y [m]'); ylabel('North x [m]');

% figure; hold off; grid on;
% for k = 1:length(x_hat)
%     %P = Rot(-x(3))*debug(1,k)*[cosd(debug(2,k)), sind(debug(2,k))]';
%     %plot( x(2,k)+P(2),x(1,k)+P(1),'*')
%     plot( x_hat(7,k),x_hat(6,k),'*')
%     xlim([0,150])
%     ylim([0,150])
%     pause(0.001)
% end

figure; hold on; grid on;
plot(zeros(size(t))+wrapTo180(Pd(3)));plot(x_hat(8,:));
title('Dock Yaw');
legend('Real', 'Filter Prediction', 'Location', 'best'); 

figure; hold on; grid on;
plot(zeros(size(t))+wrapTo180(Pd(3)));plot(x_hat(8,:));
title('Dock Yaw');
legend('Real', 'Filter Prediction', 'Location', 'best'); 

% figure; hold on; grid on;
% plot(y(5,:))
% plot(temp(1,:))
% legend('Measured', 'Filter Prediction', 'Location', 'best'); 
% title('Range');
% 
% figure; hold on; grid on;
% plot(y(6,:))
% plot(temp(2,:))
% legend('Measured', 'Filter Prediction', 'Location', 'best'); 
% title('AUV Bearing');
% 
% figure; hold on; grid on;
% plot(y(7,:))
% plot(temp(3,:))
% legend('Measured', 'Filter Prediction', 'Location', 'best'); 
% title('Dock Bearing');
% 
% figure; hold on; grid on;
% plot(stage(2:k))
% title('Controller state');
% 
% figure; hold on; grid on;
% plot(u(2,2:k))
% title('Yaw desired');


